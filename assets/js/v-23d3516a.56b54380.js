"use strict";(self.webpackChunk_you_space_docs=self.webpackChunk_you_space_docs||[]).push([[969],{9803:(s,e,a)=>{a.r(e),a.d(e,{data:()=>n});const n={key:"v-23d3516a",path:"/requests/type-items/post-types-items.html",title:"POST /types/:type_id/items",lang:"en-US",frontmatter:{sidebarDepth:0},excerpt:"",headers:[{level:2,title:"Params",slug:"params",children:[{level:3,title:"type_id",slug:"type-id",children:[]}]},{level:2,title:"Body",slug:"body",children:[{level:3,title:"visibilityId",slug:"visibilityid",children:[]},{level:3,title:"Example",slug:"example",children:[]}]},{level:2,title:"Response",slug:"response",children:[]}],filePathRelative:"requests/type-items/post-types-items.md",git:{updatedTime:1632962221e3}}},8641:(s,e,a)=>{a.r(e),a.d(e,{default:()=>t});const n=(0,a(6252).uE)('<h1 id="post-types-type-id-items" tabindex="-1"><a class="header-anchor" href="#post-types-type-id-items" aria-hidden="true">#</a> POST /types/:type_id/items</h1><p>Create a new type-item</p><h2 id="params" tabindex="-1"><a class="header-anchor" href="#params" aria-hidden="true">#</a> Params</h2><h3 id="type-id" tabindex="-1"><a class="header-anchor" href="#type-id" aria-hidden="true">#</a> type_id</h3><ul><li>type: <code>number | string</code></li><li>required: <code>true</code></li><li>details: id or name of type</li></ul><h2 id="body" tabindex="-1"><a class="header-anchor" href="#body" aria-hidden="true">#</a> Body</h2><blockquote><p>important: The request body will require the editable type-fields to exist in payload</p></blockquote><h3 id="visibilityid" tabindex="-1"><a class="header-anchor" href="#visibilityid" aria-hidden="true">#</a> visibilityId</h3><ul><li>type: <code>number</code></li><li>required: <code>true</code></li></ul><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h3><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n    <span class="token property">&quot;visibilityId&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;my-custom-field&quot;</span><span class="token operator">:</span> <span class="token string">&quot;some value&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="response" tabindex="-1"><a class="header-anchor" href="#response" aria-hidden="true">#</a> Response</h2><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n    <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;typeId&quot;</span><span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;typeName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-custom-type&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;visibilityId&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;visibilityName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;public&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;my-custom-field&quot;</span><span class="token operator">:</span> <span class="token string">&quot;some value&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;createdAt&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2021-09-13T09:56:39.623-03:00&quot;</span>\n    <span class="token comment">// other properties from serialization by type</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>',13),t={render:function(s,e){return n}}}}]);